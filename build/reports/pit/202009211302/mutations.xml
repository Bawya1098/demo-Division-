<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest>com.testing.DivisionTest.testGetValues(com.testing.DivisionTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.testing.DivisionTest.testZero(com.testing.DivisionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>34</index><block>2</block><killingTest>com.testing.DivisionTest.testGetValues(com.testing.DivisionTest)</killingTest><description>replaced return value with null for com/testing/Division::getValues</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DivisionTest.java</sourceFile><mutatedClass>com.testing.DivisionTest</mutatedClass><mutatedMethod>testGetValues</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DivisionTest.java</sourceFile><mutatedClass>com.testing.DivisionTest</mutatedClass><mutatedMethod>testGetValues</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DivisionTest.java</sourceFile><mutatedClass>com.testing.DivisionTest</mutatedClass><mutatedMethod>testZero</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertNull</description></mutation>
</mutations>
