<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>5</index><block>0</block><killingTest>com.testing.FractionTest.testInvert(com.testing.FractionTest)</killingTest><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>19</index><block>3</block><killingTest>com.testing.FractionTest.testInvert(com.testing.FractionTest)</killingTest><description>not equal to less than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>32</index><block>6</block><killingTest/><description>greater or equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>5</index><block>0</block><killingTest>com.testing.FractionTest.testInvert(com.testing.FractionTest)</killingTest><description>not equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>19</index><block>3</block><killingTest>com.testing.FractionTest.testInvert(com.testing.FractionTest)</killingTest><description>not equal to less or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>32</index><block>6</block><killingTest/><description>greater or equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>5</index><block>0</block><killingTest>com.testing.FractionTest.testInvertInNegative(com.testing.FractionTest)</killingTest><description>not equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>19</index><block>3</block><killingTest/><description>not equal to greater than</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>32</index><block>6</block><killingTest/><description>greater or equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>5</index><block>0</block><killingTest>com.testing.FractionTest.testInvertInNegative(com.testing.FractionTest)</killingTest><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>19</index><block>3</block><killingTest>com.testing.FractionTest.testInvertMinValue(com.testing.FractionTest)</killingTest><description>not equal to greater or equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>32</index><block>6</block><killingTest/><description>greater or equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>5</index><block>0</block><killingTest>com.testing.FractionTest.testInvert(com.testing.FractionTest)</killingTest><description>not equal to equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>19</index><block>3</block><killingTest>com.testing.FractionTest.testInvert(com.testing.FractionTest)</killingTest><description>not equal to equal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>com.testing.Fraction</mutatedClass><mutatedMethod>invert</mutatedMethod><methodDescription>()Lcom/testing/Fraction;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>32</index><block>6</block><killingTest/><description>greater or equal to not equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR1Mutator</mutator><index>4</index><block>0</block><killingTest>com.testing.DivisionTest.testGetValues_V2(com.testing.DivisionTest)</killingTest><description>not equal to less than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR2Mutator</mutator><index>4</index><block>0</block><killingTest>com.testing.DivisionTest.testGetValues_V2(com.testing.DivisionTest)</killingTest><description>not equal to less or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR3Mutator</mutator><index>4</index><block>0</block><killingTest>com.testing.DivisionTest.testLesserThanZero(com.testing.DivisionTest)</killingTest><description>not equal to greater than</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR4Mutator</mutator><index>4</index><block>0</block><killingTest>com.testing.DivisionTest.testLesserThanZero(com.testing.DivisionTest)</killingTest><description>not equal to greater or equal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Division.java</sourceFile><mutatedClass>com.testing.Division</mutatedClass><mutatedMethod>getValues</mutatedMethod><methodDescription>(II)[I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.rv.ROR5Mutator</mutator><index>4</index><block>0</block><killingTest>com.testing.DivisionTest.testGetValues_V2(com.testing.DivisionTest)</killingTest><description>not equal to equal</description></mutation>
</mutations>
